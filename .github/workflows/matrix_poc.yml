name: Projects Matrix Multi-Job

on:
  workflow_dispatch:
    inputs:
      matrix_list:
        description: "List of project+env combinations as JSON"
        required: true
        default: >
          [
            {"project": "1000-5", "env": "dev"},
            {"project": "1000-5", "env": "mlops"},
            {"project": "1000-5", "env": "prd"},
            {"project": "1000-6", "env": "dev"},
            {"project": "1000-6", "env": "prd"}
          ]
      exclude_list:
        description: "Array of project:env combos to exclude"
        required: false
        default: '["1000-5:mlops","1000-6:dev"]'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJSON(github.event.inputs.matrix_list) }}
    if: ${{ !contains(fromJSON(github.event.inputs.exclude_list), format('{0}:{1}', matrix.project, matrix.env)) }}
    steps:
      - run: echo "Building project ${{ matrix.project }} in env ${{ matrix.env }}"

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJSON(github.event.inputs.matrix_list) }}
    if: ${{ !contains(fromJSON(github.event.inputs.exclude_list), format('{0}:{1}', matrix.project, matrix.env)) }}
    steps:
      - run: echo "Testing project ${{ matrix.project }} in env ${{ matrix.env }}"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJSON(github.event.inputs.matrix_list) }}
    if: ${{ !contains(fromJSON(github.event.inputs.exclude_list), format('{0}:{1}', matrix.project, matrix.env)) }}
    steps:
      - run: echo "Deploying project ${{ matrix.project }} in env ${{ matrix.env }}"
